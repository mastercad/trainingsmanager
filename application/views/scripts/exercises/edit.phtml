<?php
    $obj_cad_filter_ubb_replace = new CAD_Filter_UbbReplace();
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
?>
<div>
    <h3>
        Übung Name:<span 
            class="editable" 
            style="margin-left: 20px; border-bottom: 1px dotted gray;"
            id="exercise_name" data-cad-cms-content-orig="<?php echo base64_encode($this->exercise_name);?>" 
		><?php echo $obj_cad_filter_ubb_replace->filter($this->exercise_name);?></span>
    </h3>

    <?php echo $this->previewPictureContent;?>

    <br class="clearfix" style="margin-top: 15px;" />

    <?php echo $this->exerciseTypeContent;?>

    <br class="clearfix" />

    <h3 class=""
        style="margin-top: 15px;">
        Beschreibung:
    </h3>
    
    <br class="clearfix" />
    
    <div class="editable beschreibung" 
         id="exercise_description"
         style="margin-top: 5px; border-bottom: 1px dotted gray;" 
         data-cad-cms-content-orig="<?php echo base64_encode($this->exercise_description);?>" ><?php echo $obj_cad_filter_ubb_replace->filter($this->exercise_description);?></div>
    
    <br class="clearfix" />
    
    <h3 class="besonderheit-ueberschrift"
        style="margin-top: 15px;">
        Besonderheiten:
    </h3>
    
    <br class="clearfix" />
    
    <div class="editable beschreibung" 
        id="exercise_special_features"
        style="margin-top: 5px; border-bottom: 1px dotted gray;"
        data-cad-cms-content-orig="<?php echo base64_encode($this->exercise_special_features);?>" ><?php echo $obj_cad_filter_ubb_replace->filter($this->exercise_special_features);?></div>
    
    <br class="clearfix" />

    <h3 style="float: left; display: inline; margin-top: 15px;">
        Gerät:
    </h3>

    <br class="clearfix" />

    <input type="text" class="exercise-device-name"
           style="float: left;"
           id="exercise_device_name"
           name="exercise_device_name"
           value="<?php echo $this->device_name;?>"
           data-exercise-device-name="<?php echo base64_encode($this->device_name);?>"
           data-exercise-device-id="<?php echo $this->device_id;?>" />

    <br class="clearfix" />

    <h3 style="float: left; display: inline; margin-top: 15px;">
        Geräte Einstellung:
    </h3>

    <br class="clearfix" />

    <div style="float: left; display: inline;">
        <?php echo $this->deviceOptionsDropDownContent;?>
    </div>

    <img class="device-option-add" src="/images/content/statisch/grafiken/add_normal.png"
         style="width: 30px; float: left; display: inline;"/>

    <br class="clearfix" />

    <div class="device-options">
        <?php echo $this->deviceOptionsContent;?>
    </div>

    <br class="clearfix" />

    <h3 style="float: left; display: inline; margin-top: 15px;">
        Übung Einstellung:
    </h3>

    <br class="clearfix" />

    <div style="float: left; display: inline;">
        <?php echo $this->exerciseOptionsDropDownContent;?>
    </div>

    <img class="exercise-option-add" src="/images/content/statisch/grafiken/add_normal.png"
         style="width: 30px; float: left; display: inline;"/>

    <br class="clearfix" />

    <div class="exercise-options">
        <?php echo $this->exerciseOptionsContent;?>
    </div>

    <br class="clearfix" />

    <h3 style="float: left; display: inline; margin-top: 15px;">
        Muskelgruppen:
    </h3>

    <br class="clearfix" />

    <input class="muscle-group-name" style="float: left;" value="" data-muscle-group-name="" data-muscle-group-id="" type="text">

<!--    <img class="muscle-group-add" src="/images/content/statisch/grafiken/add_normal.png"-->
<!--         style="width: 30px; float: left; display: inline; margin-top: 15px;"/>-->
    
    <br class="clearfix" />
    
    <div class="exercise-muscle-groups"
         style="margin-top: 5px;">
        <?php echo $this->exerciseMuscleGroupsContent;?>
    </div>
    
    <br class="clearfix" />
    
    <h3 style="margin-top: 15px;">
        Übungsbilder:
    </h3>
    
    <div class="preview-pictures"
         style="margin-top: 5px;">
        <?php echo $this->previewPicturesContent;?>
    </div>
    
    <br class="clearfix" />
    
    <h3 style="margin-top: 15px;">
        Übungsvideo:
    </h3>
    
    <div id="exercise_video"
         style="margin-top: 5px;">
        
    </div>
    <input type="hidden" class="id" name="exercise_id" id="exercise_id" value="<?php echo $this->exercise_id;?>" />
</div>

<br class="clearfix" />

<input type="hidden" id="picture_path" value="<?php echo base64_encode($this->picturePath);?>" />
<input type="hidden" id="picture_temp_path" value="<?php echo base64_encode($this->pictureTempPath);?>" />
<input type="hidden" id="exercise_id" value="<?php echo $this->exercise_id;?>" />

<div class="muscle-group-proposals"
     style="position: absolute; left: -5000px; top: -5000px; padding: 10px;
            background-color: #FFFFFF; opacity: 0.9; box-shadow: 5px 5px 5px #111111;" ></div>

<button onclick="save();" 
        style="margin-top: 15px;"
        class="button">
    Speichern
</button>

<script type="text/javascript">
	controller = '<?php echo Zend_Controller_Front::getInstance()->getRequest()->getControllerName();?>';

	function save() {
        var hasErrors = false;
        var messages = [];
        var i = 0;

        if (!trim(jQuery('#exercise_name').html()).length) {
            hasErrors = true;
            messages.push({'type': 'fehler', 'message': 'Die Übung braucht einen Namen!'});
        }

        if (!trim(jQuery('#exercise_description').html()).length) {
            hasErrors = true;
            messages.push({'type': 'fehler', 'message': 'Die Beschreibung der Übung fehlt!'});
        }

        var currentMuscleGroups = jQuery('.exercise-muscle-groups').find('.muscle-group');
        var muscleGroups = [];

        // alle muskelgruppen durchlaufen
        for (i = 0, len = currentMuscleGroups.length; i < len; i++) {
            var muscles = [];
            var muscleGroupId = jQuery(currentMuscleGroups[i]).data('muscle-group-id');
            var currentMusclesInMuscleGroup = jQuery(currentMuscleGroups[i]).find('.muscle');

            for (var k = 0; k < currentMusclesInMuscleGroup.length; k++) {
                var muscleId = jQuery(currentMusclesInMuscleGroup[k]).data('muscle-id');
                var muscleUse = jQuery(currentMusclesInMuscleGroup[k]).find('.muscle-use').data('muscle-use');
                if (muscleId) {
                    muscles.push({'id': muscleId, 'muscle_use': muscleUse});
                }
            }
            if (muscleGroupId) {
                muscleGroups.push({'id': muscleGroupId, 'muscles': muscles});
            }
        }

        if (!muscleGroups.length) {
            hasErrors = true;
            messages.push({'type': 'fehler', 'message': 'Es muss mindestens eine Muskelgruppe für diese Übung vollständig ausgefüllt sein!'});
        }

        var currentDeviceOptions = jQuery('.device-options').find('.device-option');
        var deviceOptions = [];

        for (i = 0, len = currentDeviceOptions.length; i < len; i++) {
            var deviceOptionId = jQuery(currentDeviceOptions[i]).data('device-option-id');
            var deviceXDeviceOptionId = jQuery(currentDeviceOptions[i]).data('device-x-device-option-id');
            var exerciseDeviceOptionId = jQuery(currentDeviceOptions[i]).data('exercise-x-device-option-id');
            var trainingPlanDeviceOptionId = jQuery(currentDeviceOptions[i]).data('training-plan-x-device-option-id');
            var deviceOptionValue = jQuery(currentDeviceOptions[i]).val();

            if (deviceOptionId
                && deviceOptionValue
            ) {
                deviceOptions.push({
                    deviceOptionId: deviceOptionId,
                    deviceXDeviceOptionId: deviceXDeviceOptionId,
                    exerciseXDeviceOptionId: exerciseDeviceOptionId,
                    trainingPlanXDeviceOptionId: trainingPlanDeviceOptionId,
                    value: deviceOptionValue});
            }
        }

        var currentExerciseOptions = jQuery('.exercise-options').find('.exercise-option');
        var exerciseOptions = [];

        for (i = 0, len = currentExerciseOptions.length; i < len; i++) {
            var exerciseOptionValue = jQuery(currentExerciseOptions[i]).val();
            var exerciseOptionId = jQuery(currentExerciseOptions[i]).data('exercise-option-id');
            var trainingExerciseOptionId = jQuery(currentExerciseOptions[i]).data('training-exercise-option-id');
            var trainingPlanExerciseOptionId = jQuery(currentExerciseOptions[i]).data('training-plan-exercise-option-id');

            if (exerciseOptionId
                && exerciseOptionValue
            ) {
                exerciseOptions.push({
                    exerciseOptionId: exerciseOptionId,
                    trainingExerciseOptionId: trainingExerciseOptionId,
                    trainingPlanExerciseOptionId: trainingPlanExerciseOptionId,
                    value: exerciseOptionValue});
            }
        }

        if (!hasErrors) {
            jQuery().setEditedElements('exercise_muscle_groups', muscleGroups);
            jQuery().setEditedElements('exercise_preview_picture', jQuery('#exercise_preview_picture').data('file'));
            jQuery().setEditedElements('exercise_type_id', jQuery('#exercise_type_id').val());
            jQuery().setEditedElements('exercise_options', exerciseOptions);
            jQuery().setEditedElements('exercise_device_options', deviceOptions);
            jQuery().setEditedElements('exercise_id', jQuery('#exercise_id').val());
            jQuery().setEditedElements('exercise_device_fk', jQuery('#exercise_device_name').data('exercise-device-id'));
            jQuery().setAjax(true);

            CADEditSave();
        } else {
            var obj_cad_messages = new CAD.Message();
            obj_cad_messages.init(messages);
            obj_cad_messages.open();
        }
    }

    jQuery(document).ready(function() {
        jQuery('.device-option-add').unbind('click').bind('click', function () {

            // check if selected option already exists
            var selectedOption = jQuery('#device_options_select').val();
            var currentOptionsList = jQuery('.device-options').find('.device-option');

            for (var i = 0, len = currentOptionsList.length; i < len; i++) {
                var option_id = jQuery(currentOptionsList[i]).data('device-option-id');

                if (option_id == selectedOption) {
                    var obj_cad_messages = new CAD.Message();
                    obj_cad_messages.init([
                        {
                            'type': 'fehler',
                            'message': 'Die ausgewählte Option existiert bereits!',
                            'confirm_func': "jQuery('#" + jQuery(currentOptionsList[i]).attr('id') + "').effect('highlight', {}, 5000)"
                        }
                    ]);
                    obj_cad_messages.open();

                    return false;
                }
            }

            jQuery.post('/devices/get-device-option-edit', {
                ajax: true,
                device_option_id: selectedOption
            }, function (response) {
                jQuery('.device-options').append(response);
            });
        });

        jQuery('.exercise-option-add').unbind('click').bind('click', function () {

            // check if selected option already exists
            var selectedOption = jQuery('#exercise_options_select').val();
            var currentOptionsList = jQuery('.exercise-options').find('.exercise-option');

            for (var i = 0, len = currentOptionsList.length; i < len; i++) {
                var option_id = jQuery(currentOptionsList[i]).data('exercise-option-id');

                if (option_id == selectedOption) {
                    var obj_cad_messages = new CAD.Message();
                    obj_cad_messages.init([
                        {
                            'type': 'fehler',
                            'message': 'Die ausgewählte Option existiert bereits!',
                            'confirm_func': "jQuery('#" + jQuery(currentOptionsList[i]).attr('id') + "').effect('highlight', {}, 5000)"
                        }
                    ]);
                    obj_cad_messages.open();

                    return false;
                }
            }

            jQuery.post('/exercises/get-exercise-option-edit', {
                ajax: true,
                exercise_option_id: selectedOption,
                exercise_id: jQuery('#exercise_id').val()
            }, function (response) {
                jQuery('.exercise-options').append(response);
            });
        });

        jQuery('.muscle-group-name').each(function() {
            var post_request = null;

            jQuery(this).unbind('keyup').on('keyup', function (e) {
                var url = '/muscle-groups/get-muscle-group-proposals/';
                var search = Base64.encode(jQuery(this).val());
                var self = jQuery(this);

                jQuery(self).css('background-color', 'red');
                jQuery(self).data('muscle-group-name', '');
                jQuery(self).data('muscle-group-id', '');

                if (null !== post_request) {
                    post_request.abort();
                }

                post_request = jQuery.ajax({
                    type: "POST",
                    url: url,
                    data: "search=" + search + "&ajax=true",
                    success: function (response) {
                        var offset = jQuery(self).offset();
                        jQuery('body').append(jQuery('.muscle-group-proposals'));
                        jQuery('.muscle-group-proposals').html(response)
                            .css('left', offset.left + "px")
                            .css('top', offset.top + 20 + "px");

                        jQuery('.muscle-group-proposals').find('.proposal').unbind('click').bind('click', function () {
                            // check ob diese muskelgruppe bereits gesetzt wurde
                            var vorhandene_muskelgruppen = jQuery('.exercise-muscle-groups').find('.muscle-group');

                            for (var i = 0, len = vorhandene_muskelgruppen.length; i < len; i++) {
                                if (jQuery(vorhandene_muskelgruppen[i]).find('.muscle-group-name').data('muscle-group-id') ==
                                    jQuery(this).data('proposal-id')
                                ) {
                                    var a_messages = new Array({
                                        'type': 'fehler',
                                        'message': 'Diese Muskelgruppe ist bereits gesetzt!'
                                    });
                                    var obj_cad_message = new CAD.Message();
                                    obj_cad_message.init(a_messages);
                                    obj_cad_message.open();

                                    return false;
                                }
                            }

                            addMuscleGroup(jQuery(this).data('proposal-id'), jQuery('#exercise_id').val());
                            jQuery('.muscle-group-proposals').fadeOut();
                            return false;
                        });
                        jQuery('.muscle-group-proposals').fadeIn();
                    }
                });
            });
        });

        function addMuscleGroup(muscleGroupId, exerciseId) {
            jQuery.ajax({
                type: "POST",
                url: '/exercises/get-muscle-group-for-exercise-edit/',
                data: "muscle_group_id=" + muscleGroupId + "&exercise_id=" + exerciseId + "&ajax=true",
                success: function (response) {
                    jQuery('.exercise-muscle-groups').append(response);
                    initMuscleRating();
                }
            });
        }

        edit_init();
        initMuscleRating();
    });

    function initMuscleRating() {
        jQuery('.exercise-muscle-groups').find('.muscle-use').unbind('mouseover').unbind('mouseout').unbind('click').hover(
            function() {
                var x = null;
                jQuery(this).unbind('mousemove').mousemove(function (e) {
                    if (!jQuery(this).parent().parent().hasClass('deactivated')) {
                        var parentOffset = jQuery(this).parent().offset();
                        x = -100 + ( parseFloat(e.pageX) - parentOffset.left);
                        x = Math.round(x / 20) * 20;
                        jQuery(this).css('background-position', x + "px " + x + "px");
                    }
                });

                jQuery(this).unbind('click').click(function () {
                    if (!jQuery(this).parent().parent().hasClass('deactivated')) {
                        jQuery(this).data('background-position', x + "px " + x + "px");
                        jQuery(this).data('muscle-use', Math.round(5 + (x / 20)));
                        jQuery(this).css('background-position', jQuery(this).data('background-position'));
                        jQuery(this).attr('title', Math.round(5 + (x / 20)));
                    }
                });
            },
            function() {
                if (!jQuery(this).parent().parent().hasClass('deactivated')) {
                    if (undefined !== jQuery(this).data('background-position')) {
                        jQuery(this).css('background-position', jQuery(this).data('background-position'));
                    } else {
                        jQuery(this).css('background-position', '-100px 0');
                    }
                }
            }
        );

        jQuery('.muscle-delete').unbind('click').bind('click', function () {
            if (jQuery(this).parent().hasClass('deactivated')) {
                jQuery(this).parent().find('.muscle-use').css('background-position', jQuery(this).parent().find('.muscle-use').data('background-position'))
                    .data('muscle-use', jQuery(this).parent().find('.muscle-use').attr('data-muscle-use-before-delete'))
                    .attr('data-muscle-use-before-delete', 0);
                jQuery(this).parent().removeClass('deactivated');
            } else {
                jQuery(this).parent().find('.muscle-use')
                    .css('background-position', '-100px -100px')
                    .attr('data-muscle-use-before-delete', jQuery(this).parent().find('.muscle-use').data('muscle-use'))
                    .data('muscle-use', 0)
                    .parent().parent().addClass('deactivated');
            }
        });
    }

    function deleteMuscleGroup() {
        jQuery(obj_ref).data('muscle-group-name', '');
        jQuery(obj_ref).data('muscle-group-id', '');
        jQuery(obj_ref).fadeOut();
    }
</script>
