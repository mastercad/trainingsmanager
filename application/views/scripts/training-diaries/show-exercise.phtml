<?php
/**
 * Created by PhpStorm.
 * User: mastercad
 * Date: 06.06.14
 * Time: 12:47
 */ 

    if ($this->exerciseContent) {
?>
    <div id="training_diary_exercises"
         class="row carousel slide"
         data-interval="false"
         data-training-diary-id="<?php echo $this->trainingDiaryId; ?>"
        >
        <div class="carousel-inner">
            <?php echo $this->exerciseContent; ?>
        </div>

        <a class="left carousel-control" href="#training_diary_exercises" role="button" data-slide="prev">
            <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="right carousel-control" href="#training_diary_exercises" role="button" data-slide="next">
            <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>
    </div>

    <button class="btn btn-default btn-primary save">
        <?php echo $this->translate('label_end_exercise');?>
    </button>

<?php
    } else {
?>
    <div class="col-sm-12">
        <p>
            Es gibt für den aktuell ausgewählten Trainingsplan keine offenen Übungen!
        </p>
    </div>
<?php
    }
?>
<script type="text/javascript" language="JavaScript">
    var nextCarouselPosition = null;

    jQuery(document).ready(function() {

        jQuery('body').css('overflow', 'auto');

        // carousel finished
        $("#training_diary_exercises").on('slid.bs.carousel', function(evt) {
            jQuery('.carousel-inner').css('overflow', 'visible');
            if (jQuery('.training-diary-exercise.active').attr('data-finished')) {
                jQuery('.save').hide();
            } else {
                jQuery('.save').show();
            }
        }) // carousel in progress
            .on('slide.bs.carousel', function(evt) {
                jQuery('.carousel-inner').css('overflow', 'hidden');
        });

        jQuery('.save').unbind('click').click(function() {
            jQuery.post(
                '/training-diaries/save', {
                    trainingDiaryExerciseInformation: collectCurrentTrainingDiaryExerciseInformation(),
                    ajax: true
                },
                function(response) {
                    var json = JSON.parse(response);

                    if (200 == json.state) {
                        var htmlContent = '';
                        if (undefined !== json.htmlContent) {
                            htmlContent = Base64.decode(json.htmlContent);
                        }

                        if (0 < htmlContent.length) {
                            checkLastActiveExercise(htmlContent);
                        } else {
                            deactivateOptionInputs();
                            if (1 < jQuery('.training-diary-exercise').length) {
                                goToNextOpenExercise();
                            } else {
                                jQuery('.save').hide();
                            }
                        }
                    } else {
                        showDialog(json.message, BootstrapDialog.TYPE_DANGER);
                    }
                }
            );
            return false;
        });

        initTrainingDiary();
    });

    function checkLastActiveExercise(content) {
        jQuery('#training_diary_exercises').html(content);
        jQuery('.save').remove();
    }

    function initTrainingDiary() {

        jQuery('.dropdown.custom-drop-down .option-add').unbind('click').click(function() {
            var selectedOption = jQuery.trim(jQuery(this).html());
            var selectedOptionName = jQuery(this).html();
            var caretContent = '<span class="caret"></span>';

            var SelectOptionWrapper = jQuery(this).parent().parent().parent();
            SelectOptionWrapper.attr('data-value', selectedOption);
            SelectOptionWrapper.find('.dropdown-toggle').html(selectedOptionName + caretContent).dropdown('toggle');

            var baseValue = SelectOptionWrapper.data('base-value');
            SelectOptionWrapper.find('.dropdown-toggle').removeClass('positive').removeClass('negative').removeClass('current');
            if (selectedOption < baseValue) {
                SelectOptionWrapper.find('.dropdown-toggle').addClass('negative');
            } else if (selectedOption == baseValue) {
                SelectOptionWrapper.find('.dropdown-toggle').addClass('current');
            } else {
                SelectOptionWrapper.find('.dropdown-toggle').addClass('positive');
            }

            return false;
        });

        jQuery('input.option').unbind('change').change(function() {
            var SelectOptionWrapper = jQuery(this);
            var selectedOption = jQuery.trim(jQuery(this).val());
            var baseValue = SelectOptionWrapper.data('base-value');

            SelectOptionWrapper.removeClass('positive').removeClass('negative').removeClass('current');
            if (selectedOption < baseValue) {
                SelectOptionWrapper.addClass('negative');
            } else if (selectedOption == baseValue) {
                SelectOptionWrapper.addClass('current');
            } else {
                SelectOptionWrapper.addClass('positive');
            }
        });
    }

    function collectCurrentTrainingDiaryExerciseInformation() {
        var exerciseOptionCount = 0;
        var deviceOptionCount = 0;
        var exerciseOptions = {};
        var deviceOptions = {};
        var trainingDiaryExerciseInformation = {};
        var currentExercise = jQuery('.training-diary-exercise.active');

        jQuery(currentExercise).find('.exercise-options .exercise-option').each(function() {
            var optionValue = extractValue(this);

            exerciseOptions[exerciseOptionCount] = {
                'trainingPlanXExerciseOptionId': jQuery(this).data('training-plan-exercise-option-id'),
                'trainingDiaryXExerciseOptionId': jQuery(this).data('training-diary-exercise-option-id'),
                'exerciseOptionId': jQuery(this).data('option-id'),
                'exerciseOptionValue': optionValue
            };
            ++exerciseOptionCount;
        });

        jQuery(currentExercise).find('.device-options .device-option').each(function() {
            var optionValue = extractValue(this);

            deviceOptions[deviceOptionCount] = {
                'trainingPlanXDeviceOptionId': jQuery(this).data('training-plan-device-option-id'),
                'trainingDiaryXDeviceOptionId': jQuery(this).data('training-diary-device-option-id'),
                'deviceOptionId': jQuery(this).data('option-id'),
                'deviceOptionValue': optionValue
            };
            ++deviceOptionCount;
        });

        trainingDiaryExerciseInformation['exerciseOptions'] = exerciseOptions;
        trainingDiaryExerciseInformation['deviceOptions'] = deviceOptions;
        trainingDiaryExerciseInformation['trainingDiaryId'] = jQuery('#training_diary_exercises').data('training-diary-id');
        trainingDiaryExerciseInformation['trainingPlanXExerciseId'] = jQuery(currentExercise).data('training-plan-exercise-id');
        trainingDiaryExerciseInformation['trainingDiaryXTrainingPlanId'] = jQuery(currentExercise).data('training-diary-x-training-plan-id');
        trainingDiaryExerciseInformation['trainingDiaryXTrainingPlanExerciseId'] = jQuery(currentExercise).data('id');

        return trainingDiaryExerciseInformation;
    }

    function deactivateOptionInputs() {
        jQuery('.training-diary-exercise.active .option').each(function() {
            var optionValue = extractValue(this);
            var optionName = jQuery(this).parent().find('label').html();
            jQuery(this).parent().html('<label>' + optionName + ':</label> ' + optionValue);
        });

        jQuery('.training-diary-exercise.active').attr('data-finished', true);
    }

    function extractValue(element) {
        var optionValue = undefined;

        if (jQuery(element).hasClass('custom-drop-down')) {
            optionValue = jQuery(element).attr('data-value');
            if (null == optionValue) {
                optionValue = jQuery(element).data('value');
            }
        } else {
            optionValue = jQuery('#' + jQuery(element).attr('id')).val();
            if (undefined == optionValue) {
                optionValue = jQuery(element).val();
            }
            if (undefined == optionValue) {
                optionValue = jQuery(element).attr('value');
            }
        }
        return optionValue;
    }

    function goToNextOpenExercise() {
        $("#training_diary_exercises .training-diary-exercise").each(function(count) {
            if (!jQuery(this).data('finished')
                && !jQuery(this).attr('data-finished')
            ) {
                jQuery("#training_diary_exercises").carousel(count);
                return false;
            }
        });
        jQuery("#training_diary_exercises").carousel('next');
        return false;
    }
</script>
