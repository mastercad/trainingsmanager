<?php
/**
 * Created by PhpStorm.
 * User: mastercad
 * Date: 27.04.14
 * Time: 11:27
 */ 
?>

<div style="padding: 25px 0; width: 100%; height: auto; overflow: hidden; background-color: #FFFFFF;">
    <div id="swipe"
         class=""
         style="width: 100%; height: auto;">
<?php
        $iFaktor = $this->iMaxBeanspruchterMuskel / 5; // 5 sind die maximale anzahl der sterne

        foreach ($this->aBeanspruchteMuskeln as $sMuskelName => $iBeanspruchung) {

            $beanspruchung_pos_x = -100;
            $iReelleBeanspruchung = $iBeanspruchung;

            if($iBeanspruchung > 0)
            {
                $iReelleBeanspruchung = $iBeanspruchung / $iFaktor;
                $beanspruchung_pos_x = -100 + ($iReelleBeanspruchung * 20);
            }
            //    echo $sMuskelName . ' : ' . $iBeanspruchung . ' - ' . $iReelleBeanspruchung . ' - ' . $iFaktor . ' - ' . $this->iMaxBeanspruchterMuskel;
            ?>
            <div style="width: 200px; float: left; display: inline; position: relative; padding-right: 20px; height: 25px; font-size: 10px;">
                <span>
                    <?php echo $sMuskelName;?>
                </span>
                    <img src="/images/content/statisch/grafiken/beanspruchung.png"
                         class="muskel-beanspruchung"
                         style="background-image: url('/images/content/statisch/grafiken/beanspruchung_bg_neu.png');
                             background-repeat: no-repeat;
                             background-position: <?php echo $beanspruchung_pos_x;?>px <?php echo $beanspruchung_pos_x;?>px;
                             width: 100px; height: 20px;
                             background-color: #EEEEEE;
                             position: absolute;
                             right: 20px;"
                         data-muskel-beanspruchung="<?php echo $iBeanspruchung;?>"
                         data-background_position="<?php echo $beanspruchung_pos_x;?>px <?php echo $beanspruchung_pos_x;?>px">
            </div>
        <?php
        }
        ?>
        <br class="clear-fix" />
        <?php echo $this->sContent;?>
        <a href="/training-diaries/start/id/<?php echo $this->trainingsplan_id;?>">
            <button>
                Trainingsplan starten
            </button>
        </a>
    </div>
</div>

<img src="/qr/get-image-for-url/url/<?php echo base64_encode('http://' . $_SERVER['HTTP_HOST'] . $this->url());?>" />

<script type="text/javascript" language="JavaScript">
    // dieser plan ist der x. in einem splitplan
    var iPositionInSplit = '<?php echo $this->iActualPos;?>';
    // es gibt x children in diesem split
    var iMaxInSplit = parseInt(<?php echo $this->iCount;?>) - 1;
    var iTrainingsplanId = parseInt(<?php echo $this->iTrainingsplanId;?>);
    var iNextTrainingsplanId = parseInt(<?php echo $this->iNextTrainingsplanId;?>);
    var iPrevTrainingsplanId = parseInt(<?php echo $this->iPrevTrainingsplanId;?>);

    function trainingsplanShowInit() {
        $('#swipe').swipe({
            swipe:function(event, direction, distance, duration, fingerCount) {
                console.log('Max : ' + iMaxInSplit + " - Pos : " + iPositionInSplit + " - Prev : " + iPrevTrainingsplanId + " - Next : " + iNextTrainingsplanId);
                if ('left' == direction) {
                    ladeNaechstenPlanEinesSplits($(this));
                } else if ('right' == direction) {
                    ladeVorigenPlanEinesSplits($(this));
//                } else if ('up' == direction) {
//                    ladeAeltereVersionDesPlanes($(this));
//                } else if ('down' == direction) {
//                    ladePerspektivischenPlan($(this));
                }
            },
            threshold: 100
        });
    }

    function ladeNaechstenPlanEinesSplits(obj) {
        // parent element position relative machen
        // hinter dem element ein weiteres einf√ºgen, was genau der breite des elements entspricht
        // element mit einer ladegrafik versehen und einsliden lassen
        // asynchron dazu wirde das layout des planes geladen per ajax und wenn er geladen wird in das element gesetz
        // was einslidet
        if (iPositionInSplit < iMaxInSplit) {
            if (0 == $('.swipe-dummy').length) {
                createSwipeDummy(obj);
            }
            var oPosition = $(obj).position();
            var iOrigWidth = parseInt($(obj).css('width'));
            var iNewOrigPos = parseInt(iOrigWidth, 10) - parseInt(oPosition.left, 10);

            $('.swipe-dummy').css('left', oPosition.left + parseInt($(obj).css('width')));
            $('.swipe-dummy').css('top', oPosition.top);
            $('.swipe-dummy').addClass('swipe-preload');
            $('.swipe-dummy').addClass('new-target');
            ladeTrainingsplan(iNextTrainingsplanId);

            $('.swipe-dummy').show();
            $('#swipe').animate({
                left: "-" + iNewOrigPos
            }, 200, function() {
                // Animation complete.
                $(this).addClass('swipe-dummy');
                $(this).prop('id', '');
                $(this).hide();
            });

            $('.swipe-dummy').animate({
                left: oPosition.left
            }, 200, function() {
                // Animation complete.
                $(this).removeClass('swipe-dummy');
                $(this).removeClass('swipe-preload');
                $(this).prop('id', 'swipe');
                trainingsplanShowInit();
            });
        }
    }

    function ladeVorigenPlanEinesSplits(obj) {
        if (iPositionInSplit > 0) {
            if (0 == $('.swipe-dummy').length) {
                createSwipeDummy(obj);
            }
            var oPosition = $(obj).position();
            var iOrigWidth = parseInt($(obj).css('width'));
            var iNewOrigPos = parseInt(iOrigWidth, 10) + parseInt(oPosition.left, 10);
            $('.swipe-dummy').css('left', oPosition.left - parseInt($(obj).css('width')));
            $('.swipe-dummy').css('top', oPosition.top);
            $('.swipe-dummy').addClass('swipe-preload');
            $('.swipe-dummy').addClass('new-target');
            ladeTrainingsplan(iPrevTrainingsplanId);

            $('.swipe-dummy').show();
            $('#swipe').animate({
                left: iNewOrigPos
            }, 200, function() {
                // Animation complete.
                // Animation complete.
                $(this).addClass('swipe-dummy');
                $(this).prop('id', '');
                $(this).hide();
            });

            $('.swipe-dummy').animate({
                left: oPosition.left
            }, 200, function() {
                $(this).removeClass('swipe-dummy');
                $(this).removeClass('swipe-preload');
                $(this).prop('id', 'swipe');
                trainingsplanShowInit();
                // Animation complete.
            });
//            trainingsplanShowInit();
        }
    }

    function ladeAeltereVersionDesPlanes(obj) {
        if (0 == $('.swipe-dummy').length) {
            createSwipeDummy(obj);
        }
        var oPosition = $(obj).position();
        var iOrigHeight = parseInt($(obj).css('height'));
        var iNewOrigPos = parseInt(iOrigHeight, 10) + parseInt(oPosition.top, 10);
        $('.swipe-dummy').css('top', oPosition.top + parseInt($(obj).css('height')));
        $('.swipe-dummy').css('left', oPosition.left);
        $('.swipe-dummy').addClass('swipe-preload');
        $('.swipe-dummy').addClass('new-target');
        ladeTrainingsplan();

        $('#swipe').animate({
            top: "-" + iNewOrigPos
        }, 200, function() {
            // Animation complete.
            $(this).addClass('swipe-dummy');
            $(this).prop('id', '');
        });

        $('.swipe-dummy').animate({
            top: oPosition.top
        }, 200, function() {
            $(this).removeClass('swipe-dummy');
            $(this).removeClass('swipe-preload');
            $(this).prop('id', 'swipe');
            trainingsplanShowInit();
        });
    }

    function ladePerspektivischenPlan(obj) {
        if (0 == $('.swipe-dummy').length) {
            createSwipeDummy(obj);
        }
        var oPosition = $(obj).position();
        var iOrigHeight = parseInt($(obj).css('height'));
        var iNewOrigPos = parseInt(iOrigHeight, 10) + parseInt(oPosition.top, 10);
        $('.swipe-dummy').css('top', oPosition.top - parseInt($(obj).css('height')));
        $('.swipe-dummy').css('left', oPosition.left);
        $('.swipe-dummy').addClass('swipe-preload');
        $('.swipe-dummy').addClass('new-target');
        ladeTrainingsplan();

        $('.swipe-dummy').show();
        $('#swipe').animate({
            top: iNewOrigPos
        }, 200, function() {
            // Animation complete.
            $(this).addClass('swipe-dummy');
            $(this).prop('id', '');
            $(this).hide();
        });

        $('.swipe-dummy').animate({
            top: oPosition.top
        }, 200, function() {
            $(this).removeClass('swipe-dummy');
            $(this).removeClass('swipe-preload');
            $(this).prop('id', 'swipe');
        });
//        trainingsplanShowInit();
    }

    function ladeTrainingsplan(iTrainingsplanId) {
        var url = '/training-diaries/get-training-plan';
        var oParams = {'id': iTrainingsplanId, 'ajax': true};
        $.post(url, oParams, function(sResponse){
            setJsonData(sResponse);
            $('.new-target').parent().css('height', $('.new-target').height() + 'px');
            $('.new-target').removeClass('new-target');
        });
    }

//    $(window).resize(function() {
//        if(this.resizeTO) clearTimeout(this.resizeTO);
//        this.resizeTO = setTimeout(function() {
//            $(this).trigger('resizeEnd');
//        }, 200);
//    });

//    $(window).bind('resizeEnd', function() {
//        var windowWidth = $(window).width();
//        var windowHeight = $(window).height();
//        $('#swipe').css('width', windowWidth);
//        $('.swipe-dummy').css('left', windowWidth + 100);
//        $('.swipe-dummy').css('width', windowWidth);
//    });

    /*
    function createSwipeDummy(obj) {
        $(obj).parent().css('position', 'relative');
        var oPosition = $(obj).position();
        var iOrigWidth = parseInt($(obj).css('width'));
        var iNewOrigPos = parseInt(iOrigWidth, 10) - parseInt(oPosition.left, 10);
        var oNewElement = $('<div ></div>');
        $(obj).css('position', 'absolute');
        oNewElement.css('position', 'absolute');
//        oNewElement.css('border', '1px solid red');
//        oNewElement.css('border-radius', '5px');
        oNewElement.css('width', $(obj).width());
        oNewElement.css('height', $(obj).height());
        oNewElement.prop('id', $(obj).prop('id') + '-swipe-dummy');
        $(obj).swipe("destroy");
        $(obj).parent().append(oNewElement);
        $(obj).prop('id', '');
        $(obj).addClass('swipe-dummy');
        $(oNewElement).prop('id', 'swipe');
    }
    */

    function setJsonData(sJsonString) {
        try {
            var oJson = JSON.parse(sJsonString);
            $('.new-target').html(Base64.decode(oJson.content));
            iPositionInSplit = oJson.actualPos;
            iMaxInSplit = oJson.count - 1;
            iTrainingsplanId = oJson.trainingsplanId;
            iNextTrainingsplanId = oJson.nextTrainingsplanId;
            iPrevTrainingsplanId = oJson.prevTrainingsplanId;

            return true;
        } catch (oException) {
//            $('.new-target').html($('#swipe').html());
//            iPositionInSplit = iMaxInSplit;
//            alert(sJsonString);
            return false;
        }
    }

    trainingsplanShowInit();

</script>
