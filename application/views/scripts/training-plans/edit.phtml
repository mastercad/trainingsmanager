<ul class="tab-droppable nav nav-tabs">
    <?php echo $this->trainingPlansHeaderContent;?>
</ul>

<div class="training-plans tab-content">
<?php
    echo $this->trainingPlanContent;
?>
</div>
<input type="hidden" id="training_plan_id" name="training-plan-id" value="<?php echo $this->trainingPlanId;?>" />
<input type="hidden" id="training_plan_user_id" name="training-plan-user-id" value="<?php echo $this->trainingPlanUserId;?>" />

<!--</form>-->
<h3>
    <?php echo $this->translate('label_exercise');?>:
</h3>

<div class="form-group">
    <input type="text" name="new-exercise" id="new_exercise"
           class="form-control"
           data-toggle="tooltip" data-placement="right" title="<?php echo $this->translate('tooltip_type_to_get_exercise_proposals');?>"/>
</div>

<div class="proposals"></div>

<iframe id="upload_target" name="upload-target" style="position: absolute; top: -1000px; left: -1000px; width: 0; height: 0; padding: 0;"></iframe>

<button class="btn btn-primary btn-block save" >
    <?php echo $this->translate('label_save');?>
</button>

<script language="JavaScript">
    var ajax = null;

    jQuery('document').ready(function(){

        jQuery('#new_exercise').bind('keyup', function(e) {

            var url = '/'+controller+'/get-exercise-proposals/';
            var search = Base64.encode(jQuery(this).val());
            var self = jQuery(this);

            //            jQuery(self).css('background-color', 'red');
            //            jQuery(self).data('uebung-name', '');
            //            jQuery(self).data('uebung-id', '');

            if (ajax) {
                ajax.abort();
            }

            ajax = jQuery.ajax({
                type: "POST",
                url: url,
                data: "search=" + search + "&ajax=true",
                success: function(response){
                    var json = JSON.parse(response);

                    if (200 == json.state) {
                        var exerciseProposals = jQuery('.proposals');
                        var offset = jQuery(self).offset();
                        var topAddition = 40;
                        
                        jQuery('body').append(exerciseProposals);

                        exerciseProposals.html(Base64.decode(json.htmlContent))
                            .css('left', offset.left + "px")
                            .css('top', offset.top + topAddition + "px")
                            .find('.proposal').unbind('click').bind('click', function () {
                                var found = false;
                                var currentProposal = jQuery(this);
                                jQuery('.tab-pane.active .training-plan .exercise').each(function() {
                                    if (jQuery(this).data('exercise-id') == jQuery(currentProposal).data('proposal-id')) {
                                        found = true;
                                        showDialog('<?php echo $this->translate('text_exercise_already_set');?>', BootstrapDialog.TYPE_DANGER);
                                        return false;
                                    }
                                });
                                jQuery(self).val('');
                                if (false === found) {
                                    var count = countExercises();
                                    addExercise(jQuery(this).data('proposal-id'), count);
                                }
                                jQuery('.proposals').fadeOut();
                                return false;
                            });
                        exerciseProposals.fadeIn();
                    } else {
                        showDialog(json.message, BootstrapDialog.TYPE_DANGER);
                    }
                }
            });
        });

        $('#new_split_plan').unbind('click').bind('click', function() {
            var sUrl = '/training-plans/get-training-plan-for-split';
            var oParams = {
                'user_id': '<?php echo $this->userId;?>',
                'training_plan_id': '<?php echo $this->trainingPlanId;?>',
                'ajax': 1
            };

            if (ajax) {
                ajax.abort();
            }

            var that = this;
            ajax = jQuery.post(sUrl, oParams, function(response) {
                try {
                    var json = JSON.parse(response);

                    if (200 == json.state) {
                        var content = Base64.decode(json.htmlContent);
                        jQuery(content).find("li").insertBefore(jQuery(that).parent());
                        jQuery('.tab-content').append(jQuery(content).filter('div.tab-pane').get(0));
                        trainingPlanEditInit();
                        initTabs();
                    } else {
                        showDialog(json.message, BootstrapDialog.TYPE_DANGER);
                    }
                } catch (e) {

                }
            });
        });

        jQuery('.save').unbind('click').click(function() {
            var trainingPlanCollection = collectionTrainingPlanInformation();

            if (ajax) {
                ajax.abort();
            }

            ajax = jQuery.post('/'+controller+'/save', {
                trainingPlanCollection: trainingPlanCollection,
                trainingPlanUserId: jQuery('#training_plan_user_id').val(),
                ajax: true}, function(response) {
                var json = JSON.parse(response);

                if (200 == json.state) {
                    showDialog(json.message, BootstrapDialog.TYPE_SUCCESS);
                } else {
                    showDialog(json.message, BootstrapDialog.TYPE_DANGER);
                }
            });
            return false;
        });

        function initTabs() {
            $('.nav-tabs').tab();

            jQuery('.nav-tabs li a').dblclick(function() {
                convertTabInEditMode(this);
            });

            $(".tab-droppable").sortable({
                revert: true,
                connectWith: '.tab-droppable',
                items: "li:not(.placeholder)",
                sort: function() {
//                    $(this).removeClass( "ui-state-default" );
                    $(this).addClass( "ui-state-default" );
                },
                stop: function(event, ui) {
//                    $(this).addClass( "ui-state-default" );
                    $(this).removeClass( "ui-state-default" );
                }
            });
        }

        function convertTabInEditMode(object) {
            var currentValue = jQuery.trim(jQuery(object).html());
            var newContent = jQuery('<input type="text" value='+currentValue+' />');
            jQuery(newContent).data('href', jQuery(object).attr('href'));
            jQuery(object).replaceWith(newContent);
            jQuery(newContent)
                .focus()
                .focusout(function() {convertTabFromEditMode(this);})
                .keypress(function (e) {
                    if (e.which == 13) {
                        convertTabFromEditMode(this);
                        return false;    //<---- Add this line
                    }
                })
        }

        function convertTabFromEditMode(object) {
            var currentValue = jQuery(object).val();
            var href = jQuery(object).data('href');
            var newContent = jQuery('<a data-toggle="tab" href="'+href+'">'+currentValue+'</a>');
            jQuery(object).replaceWith(newContent);
            initTabs();
        }

        function trainingPlanEditInit() {

            $(".droppable").sortable({
                revert: true,
                connectWith: '.droppable',
                items: "li:not(.placeholder)",
                sort: function() {
                    $(this).removeClass( "ui-state-default" );
                },
                stop: function(event, ui) {
                    $(this).addClass( "ui-state-default" );
//                    connectExerciseToParentTrainingPlan(ui.item);
                }
            });

            $(".droppable li").hover(
                function() {
                    $(this).css({'background-color': 'lightblue', 'border': '1px solid skyblue', 'border-radius': '5px', 'cursor': 'pointer'});
                },
                function() {
                    $(this).css({'background-color': 'gainsboro', 'border': '0px none', 'cursor': 'normal'});
                }
            );

            jQuery('.dropdown.custom-drop-down .option-add').unbind('click').click(function() {
                var selectedOption = jQuery.trim(jQuery(this).html());
                var selectedOptionName = jQuery(this).html();
                var caretContent = '<span class="caret"></span>';

                jQuery(this).parent().parent().parent().attr('data-value', selectedOption);
                jQuery(this).parent().parent().parent().find('.dropdown-toggle').html(selectedOptionName + caretContent).dropdown('toggle');

                return false;
            });

            jQuery('.device-option-select .option-add').unbind('click').click(function() {
                var self = jQuery(this);
                var parent = jQuery(this).parent().parent().parent().parent().parent();
                var selectedOption = jQuery(this).data('value');
                var optionAlreadySet = false;

                parent.find('.device-options .device-option').each(function() {
                    if (jQuery(this).data('option-id') == selectedOption) {
                        optionAlreadySet = true;
                        // deleted?
                        if (jQuery(this).hasClass('deleted')) {
                            jQuery(this).parent().fadeIn();
                            jQuery(this).removeClass('deleted');
                            jQuery(this).focus();
                        //
                        } else {
                            showDialog('<?php echo $this->translate('tooltip_selected_option_already_set');?>', BootstrapDialog.TYPE_DANGER);
                            jQuery(this).effect('highlight', {}, 5000);
                        }
                        return false;
                    }
                });

                jQuery(this).parent().parent().parent().find('.dropdown-toggle').dropdown('toggle');

                if (false == optionAlreadySet) {

                    if (ajax) {
                        ajax.abort();
                    }

                    ajax = jQuery.post(
                        '/'+controller+'/get-device-option', {
                            ajax: true,
                            trainingPlanExerciseId: parent.data('training-plan-exercise-id'),
                            deviceId: parent.find('.device').data('device-id'),
                            exerciseId: parent.data('exercise-id'),
                            deviceOptionId: selectedOption
                        },
                        function (response) {
                            var json = JSON.parse(response);

                            if (200 == json.state) {
                                parent.find('.device-options').append(Base64.decode(json.htmlContent)).find('.device-option:last').focus();
                                trainingPlanEditInit();
                            } else {
                                showDialog(json.message, BootstrapDialog.TYPE_DANGER);
                            }
                        }
                    );
                }
                return false;
            });

            jQuery('.exercise-option-select .option-add').unbind('click').click(function() {
                var self = jQuery(this);
                var parent = jQuery(this).parent().parent().parent().parent().parent();
                var selectedOption = jQuery(this).data('value');
                var optionAlreadySet = false;
                parent.find('.exercise-option').each(function() {
                    if (jQuery(this).data('option-id') == selectedOption) {
                        optionAlreadySet = true;
                        if (jQuery(this).hasClass('deleted')) {
                            jQuery(this).parent().fadeIn();
                            jQuery(this).removeClass('deleted');
                            jQuery(this).focus();
                        } else {
                            showDialog('<?php echo $this->translate('tooltip_selected_option_already_set');?>', BootstrapDialog.TYPE_DANGER);
                            jQuery(this).effect('highlight', {}, 5000);
                        }
                        return false;
                    }
                });

                jQuery(this).parent().parent().parent().find('.dropdown-toggle').dropdown('toggle');

                if (false == optionAlreadySet) {

                    if (ajax) {
                        ajax.abort();
                    }

                    ajax = jQuery.post(
                        '/'+controller+'/get-exercise-option',
                        {
                            ajax: true,
                            trainingPlanExerciseId: parent.data('training-plan-exercise-id'),
                            exerciseId: parent.data('exercise-id'),
                            exerciseOptionId: selectedOption
                        },
                        function (response) {
                            var json = JSON.parse(response);

                            if (200 == json.state) {
                                parent.find('.exercise-options').append(Base64.decode(json.htmlContent)).find('.exercise-option:last').focus();
                                initTabs();
                                trainingPlanEditInit();
                            } else {
                                showDialog(json.message, BootstrapDialog.TYPE_DANGER);
                            }
                        }
                    );
                }
                return false;
            });

            jQuery('.option-delete').unbind('click').click(function() {
                jQuery(this).parent().find('.option-input').val('').addClass('deleted').parent().fadeOut();
            });
        }

        function addExercise(exerciseId, count) {
            var sUrl = '/training-plans/get-exercise';
            var oData = {'id': exerciseId, 'ajax': true, 'counter': count};

            if (ajax) {
                ajax.abort();
            }

            ajax = jQuery.post(sUrl, oData, function(response) {
                try {
                    var json = JSON.parse(response);

                    if (200 == json.state) {
//                        jQuery('ol.training-plan:last').append(Base64.decode(json.htmlContent)).find('.exercise:last').effect('highlight', {}, 3000);
                        jQuery('.training-plans .tab-pane.active ol').append(Base64.decode(json.htmlContent)).find('.exercise:last').effect('highlight', {}, 3000);
                        trainingPlanEditInit();
                    } else {
                        showDialog(json.message, BootstrapDialog.TYPE_DANGER);
                    }
                    // is not a json object -> paste content
                } catch (e) {
                    showDialog(e, BootstrapDialog.TYPE_DANGER);
                }
            });
        }

        function countExercises() {
            var count = 0;
            jQuery('ol.training_plan:last .exercise').each(function() {
                if (count < $(this).attr('id')) {
                    count = $(this).attr('id');
                }
            });
            return parseInt(count) + 1;
        }

        function collectionTrainingPlanInformation() {
            var trainingPlanCount = 0;
            var trainingPlanCollection = {};
            jQuery('.nav-tabs li a').each(function() {
                var trainingTagPlanId = jQuery(this).attr('href');
                var trainingPlanName = jQuery(this).html();
                var exercises = {};
                var exerciseCount = 0;
                var currentTrainingPlan = jQuery(trainingTagPlanId);
                currentTrainingPlan.find('li.exercise').each(function() {
                    var exercise = {};
                    var currentExercise = jQuery(this);
                    var exerciseOptions = {};
                    var deviceOptions = {};
                    var exerciseOptionCount = 0;
                    var deviceOptionCount = 0;

                    currentExercise.find('.exercise-options .exercise-option').each(function() {
                        var optionValue = null;

                        if (jQuery(this).hasClass('custom-drop-down')) {
                            optionValue = jQuery(this).data('value');
                        } else {
                            // read persistent value
                            var persistentOptionValue = jQuery('#' + jQuery(this).attr('id')).val();
                            var newOptionValue = jQuery(this).val();

                            if (newOptionValue) {
                                optionValue = newOptionValue;
                            } else {
                                optionValue = persistentOptionValue;
                            }
                        }

                        exerciseOptions[exerciseOptionCount] = {
                            'trainingPlanXExerciseOptionId': jQuery(this).data('training-plan-exercise-option-id'),
                            'exerciseOptionId': jQuery(this).data('option-id'),
                            'exerciseOptionValue': optionValue
                        };
                        ++exerciseOptionCount;
                    });

                    currentExercise.find('.device-options .device-option').each(function() {

                        var optionValue = null;

                        if (jQuery(this).hasClass('custom-drop-down')) {
                            optionValue = jQuery(this).data('value');
                        } else {
                            // read persistent value
                            var persistentOptionValue = jQuery('#' + jQuery(this).attr('id')).val();
                            var newOptionValue = jQuery(this).val();

                            if (newOptionValue) {
                                optionValue = newOptionValue;
                            } else {
                                optionValue = persistentOptionValue;
                            }
                        }

                        deviceOptions[deviceOptionCount] = {
                            'trainingPlanXDeviceOptionId': jQuery(this).data('training-plan-device-option-id'),
                            'deviceOptionId': jQuery(this).data('option-id'),
                            'deviceOptionValue': optionValue
                        };
                        ++deviceOptionCount;
                    });
                    exercise.trainingPlanExerciseId = jQuery(currentExercise).data('training-plan-exercise-id');
                    exercise.exerciseId = jQuery(currentExercise).data('exercise-id');
                    exercise.exerciseComment = jQuery(currentExercise).find('.exercise-comment').val();
                    exercise.deviceOptions = deviceOptions;
                    exercise.exerciseOptions = exerciseOptions;
                    exercises[exerciseCount] = exercise;
                    ++exerciseCount;
                });
                trainingPlanCollection[trainingPlanCount] = {
                    trainingPlanId: jQuery(currentTrainingPlan).find('ol').attr('id'),
                    trainingPlanName: trainingPlanName,
                    exercises: exercises
                };
                ++trainingPlanCount;
            });
            trainingPlanCollection.trainingPlanId = jQuery('#training_plan_id').val();
            return trainingPlanCollection;
        }
        initTabs();
        trainingPlanEditInit();
    });

</script>
