<?php
/**
 * Created by PhpStorm.
 * User: mastercad
 * Date: 06.06.14
 * Time: 12:47
 */ 

?>
<div id="trainingstagebuch" style="position: relative;">
    <div id="swipe-left" style="position: absolute; z-index: 2; background-image: url('/images/content/statisch/grafiken/swipe-left.png'); background-repeat: no-repeat; background-position: left center; right: 0; top: 0; height: 100%; width: 20px;"></div>
    <div id="swipe-right" style="position: absolute; z-index: 2; background-image: url('/images/content/statisch/grafiken/swipe-right.png'); background-repeat: no-repeat; background-position: right center; left: 0; top: 0; height: 100%; width: 20px;"></div>

    <div id="trainingstagebuch-uebung">
        <?php echo $this->sContent;?>
    </div>
</div>
<br class="clearfix" />
<button class="end_exercise">
    Übung abschließen
</button>

<script type="text/javascript" language="JavaScript">
// dieser plan ist der x. in einem splitplan
var iPositionImPlan = '<?php echo $this->iActualPos;?>';
// es gibt x children in diesem split
var iMaxImPlan = parseInt(<?php echo $this->iCount;?>) - 1;
var iTrainingsplanUebungId = parseInt(<?php echo $this->iTrainingsplanUebungId;?>);
var iNextTrainingsplanUebungId = parseInt(<?php echo $this->iNextTrainingsplanUebungId;?>);
var iPrevTrainingsplanUebungId = parseInt(<?php echo $this->iPrevTrainingsplanUebungId;?>);

function uebungShowInit() {
    $('#trainingstagebuch-uebung').swipe({
        swipe:function(event, direction, distance, duration, fingerCount) {
            console.log('Max : ' + iMaxImPlan + " - Pos : " + iPositionImPlan + " - Prev : " + iPrevTrainingsplanUebungId + " - Next : " + iNextTrainingsplanUebungId);
            if ('left' == direction) {
                ladeNaechsteUebung($(this));
            } else if ('right' == direction) {
                ladeVorigeUebung($(this));
//                } else if ('up' == direction) {
//                    loadPreviousVersionOfExercise($(this));
//                } else if ('down' == direction) {
//                    loadForecastVersionOfExerise($(this));
            }
        },
        threshold: 100
    });

    $('#swipe-left').unbind('click').on('click', function(){ console.log("SWIPE LEFT!"); loadNextExerise($('#trainingstagebuch-uebung'));});

    $('#swipe-right').unbind('click').on('click', function(){loadPreviousExercise($('#trainingstagebuch-uebung'));});
}

function loadNextExercise(obj) {
    // parent element position relative machen
    // hinter dem element ein weiteres einfügen, was genau der breite des elements entspricht
    // element mit einer ladegrafik versehen und einsliden lassen
    // asynchron dazu wirde das layout des planes geladen per ajax und wenn er geladen wird in das element gesetz
    // was einslidet

    saveCurrentExercise(obj);

    if (iPositionImPlan < iMaxImPlan) {
        if (0 == $('.swipe-dummy').length) {
            createSwipeDummy(obj);
        }
        var oPosition = $(obj).position();
        var iOrigWidth = parseInt($(obj).css('width'));
        var iNewOrigPos = parseInt(iOrigWidth, 10) - parseInt(oPosition.left, 10);

        $('.swipe-dummy').css('left', oPosition.left + parseInt($(obj).css('width')));
        $('.swipe-dummy').css('top', oPosition.top);
        $('.swipe-dummy').addClass('swipe-preload');
        $('.swipe-dummy').addClass('new-target');
        ladeUebung(iNextTrainingsplanUebungId);

        $('.swipe-dummy').show();
        $('#trainingstagebuch-uebung').animate({
            left: "-" + iNewOrigPos
        }, 200, function() {
            // Animation complete.
            $(this).addClass('swipe-dummy');
            $(this).prop('id', '');
            $(this).hide();
        });

        $('.swipe-dummy').animate({
            left: oPosition.left
        }, 200, function() {
            // Animation complete.
            $(this).removeClass('swipe-dummy');
            $(this).removeClass('swipe-preload');
            $(this).prop('id', 'trainingstagebuch-uebung');
            uebungShowInit();
        });
    }
}

function ladePreviousExercise(obj) {
    if (iPositionImPlan > 0) {
        if (0 == $('.swipe-dummy').length) {
            createSwipeDummy(obj);
        }
        var oPosition = $(obj).position();
        var iOrigWidth = parseInt($(obj).css('width'));
        var iNewOrigPos = parseInt(iOrigWidth, 10) + parseInt(oPosition.left, 10);
        $('.swipe-dummy').css('left', oPosition.left - parseInt($(obj).css('width')));
        $('.swipe-dummy').css('top', oPosition.top);
        $('.swipe-dummy').addClass('swipe-preload');
        $('.swipe-dummy').addClass('new-target');
        ladeUebung(iPrevTrainingsplanUebungId);

        $('.swipe-dummy').show();
        $('#trainingstagebuch-uebung').animate({
            left: iNewOrigPos
        }, 200, function() {
            // Animation complete.
            // Animation complete.
            $(this).addClass('swipe-dummy');
            $(this).prop('id', '');
            $(this).hide();
        });

        $('.swipe-dummy').animate({
            left: oPosition.left
        }, 200, function() {
            $(this).removeClass('swipe-dummy');
            $(this).removeClass('swipe-preload');
            $(this).prop('id', 'trainingstagebuch-uebung');
            uebungShowInit();
            // Animation complete.
        });
    }
}

function loadPreviousVersionOfExercise(obj) {
    if (0 == $('.swipe-dummy').length) {
        createSwipeDummy(obj);
    }
    var oPosition = $(obj).position();
    var iOrigHeight = parseInt($(obj).css('height'));
    var iNewOrigPos = parseInt(iOrigHeight, 10) + parseInt(oPosition.top, 10);
    $('.swipe-dummy').css('top', oPosition.top + parseInt($(obj).css('height')));
    $('.swipe-dummy').css('left', oPosition.left);
    $('.swipe-dummy').addClass('swipe-preload');
    $('.swipe-dummy').addClass('new-target');
    ladeUebung(iPrevTrainingsplanUebungId);

    $('#trainingstagebuch-uebung').animate({
        top: "-" + iNewOrigPos
    }, 200, function() {
        // Animation complete.
        $(this).addClass('swipe-dummy');
        $(this).prop('id', '');
    });

    $('.swipe-dummy').animate({
        top: oPosition.top
    }, 200, function() {
        $(this).removeClass('swipe-dummy');
        $(this).removeClass('swipe-preload');
        $(this).prop('id', 'trainingstagebuch-uebung');
        uebungShowInit();
    });
}

function loadExerciseInformation(obj) {
    
}

function loadForecastOfExercise(obj) {
    if (0 == $('.swipe-dummy').length) {
        createSwipeDummy(obj);
    }
    var oPosition = $(obj).position();
    var iOrigHeight = parseInt($(obj).css('height'));
    var iNewOrigPos = parseInt(iOrigHeight, 10) + parseInt(oPosition.top, 10);
    $('.swipe-dummy').css('top', oPosition.top - parseInt($(obj).css('height')));
    $('.swipe-dummy').css('left', oPosition.left);
    $('.swipe-dummy').addClass('swipe-preload');
    $('.swipe-dummy').addClass('new-target');
    ladeUebung(iPrevTrainingsplanUebungId);

    $('.swipe-dummy').show();
    $('#trainingstagebuch-uebung').animate({
        top: iNewOrigPos
    }, 200, function() {
        // Animation complete.
        $(this).addClass('swipe-dummy');
        $(this).prop('id', '');
        $(this).hide();
    });

    $('.swipe-dummy').animate({
        top: oPosition.top
    }, 200, function() {
        $(this).removeClass('swipe-dummy');
        $(this).removeClass('swipe-preload');
        $(this).prop('id', 'trainingstagebuch-uebung');
    });
    uebungShowInit();
}

function saveCurrentExercise(obj) {

}

function ladeUebung(iTrainingsplanUebungId)
{
    var url = '/trainingstagebuch/get-uebung';
    var oParams = {'id': iTrainingsplanUebungId, 'ajax': true};
    $.post(url, oParams, function(sResponse){
        setJsonData(sResponse);
        configDesktop();
        $('.new-target').parent().css('height', $('.new-target').height() + 'px');
        $('.new-target').removeClass('new-target');
    });
}

$(window).resize(function() {
    if(this.resizeTO) clearTimeout(this.resizeTO);
    this.resizeTO = setTimeout(function() {
        $(this).trigger('resizeEnd');
    }, 200);
});

$(window).bind('resizeEnd', function() {
    var windowWidth = $(window).width();
    var windowHeight = $(window).height();
//        alert( $('#swipe').width() + " - " + $('.swipe-dummy').width() + " - " + windowWidth);
    $('#trainingstagebuch-uebung').css('width', windowWidth);
    $('.swipe-dummy').css('left', windowWidth + 100);
    $('.swipe-dummy').css('width', windowWidth);
});

function createSwipeDummy(obj)
{
    $(obj).parent().css('position', 'relative');
    var oPosition = $(obj).position();
    var iOrigWidth = parseInt($(obj).css('width'));
    var iNewOrigPos = parseInt(iOrigWidth, 10) - parseInt(oPosition.left, 10);
    var oNewElement = $('<div ></div>');
    $(obj).css('position', 'absolute');
    oNewElement.css('position', 'absolute');
//        oNewElement.css('border', '1px solid red');
//        oNewElement.css('border-radius', '5px');
    oNewElement.css('width', $(obj).width());
    oNewElement.css('height', $(obj).height());
    oNewElement.prop('id', $(obj).prop('id') + '-swipe-dummy');
    $(obj).swipe("destroy");
    $(obj).parent().append(oNewElement);
    $(obj).prop('id', '');
    $(obj).addClass('swipe-dummy');
    $(oNewElement).prop('id', 'trainingstagebuch-uebung');
}

function setJsonData(sJsonString)
{
    try {
        var oJson = JSON.parse(sJsonString);
        $('.new-target').html(Base64.decode(oJson.content));
        iPositionImPlan = oJson.actualPos;
        iMaxImPlan = oJson.count - 1;
        iTrainingsplanUebungId = oJson.trainingsplanUebungId;
        iNextTrainingsplanUebungId = oJson.nextTrainingsplanUebungId;
        iPrevTrainingsplanUebungId = oJson.prevTrainingsplanUebungId;

        return true;
    } catch (oException) {
//            $('.new-target').html($('#swipe').html());
//            iPositionInSplit = iMaxInSplit;
//            alert(sJsonString);
        return false;
    }
}

// richtet die oberfläche der seite entsprechend der neuen JSON daten ein
function configDesktop()
{
    if (iPositionImPlan > 0) {
        $('#swipe-right').show();
    } else {
        $('#swipe-right').hide();
    }
    if (iPositionImPlan < iMaxImPlan) {
        $('#swipe-left').show();
    } else {
        $('#swipe-left').hide();
    }
}

uebungShowInit();
configDesktop();

</script>
