<form method="post" action="/trainingsplan/speichern" target="upload_target" id="trainingsplan_edit">
    <input type="checkbox" id="trainingsplan_flag_active" name="trainingsplan_flag_active"
           value="1"
<?php

    if (TRUE == $this->trainingsplan_active) {
        echo 'checked="checked" ';
    }
?>
    />
    <div id="uebungen">
<?php
        echo $this->sContent;
?>
    </div>
    <input type="hidden" name="trainingsplan_id" id="trainingsplan_id"
           value="<?php echo $this->iTrainingsplanId;?>" />
    <input type="submit" name="trainingsplan_speichern" id="trainingsplan_speichern"
           value="speichern" />
</form>
<input type="text" name="neue_uebung" id="neue_uebung" />
<?php
    if (2 == $this->trainingsplan_layout_fk) {
?>
    <button id="new-split-plan">Neuer Splitplan</button>
<?php
    }
?>
<script language="JavaScript">
    jQuery('document').ready(function(){

        jQuery('#neue_uebung').bind('keyup', function(e) {

            var post_request = null;

            var url = '/trainingsplan/get-uebungen-vorschlaege/';
            var suche = Base64.encode(jQuery(this).val());
            var self = jQuery(this);

            //            jQuery(self).css('background-color', 'red');
            //            jQuery(self).data('uebung-name', '');
            //            jQuery(self).data('uebung-id', '');

            if(null !== post_request)
            {
                post_request.abort();
            }

            post_request = jQuery.ajax({
                type: "POST",
                url: url,
                data: "suche=" + suche + "&ajax=true",
                success: function(response){
                    var offset = jQuery(self).offset();
                    jQuery('body').append(jQuery('#uebungen-vorschlaege'));
                    jQuery('#uebungen-vorschlaege').html(response);
                    jQuery('#uebungen-vorschlaege').css('left', offset.left + "px");
                    jQuery('#uebungen-vorschlaege').css('top', offset.top + 15 + "px");

                    jQuery('#uebungen-vorschlaege').find('.vorschlag').unbind('click');
                    jQuery('#uebungen-vorschlaege').find('.vorschlag').bind('click', function()
                    {
                        // check ob diese geraetegruppe bereits gesetzt wurde
                        var vorhandene_uebungen = jQuery('.trainingsplan-edit').find('.uebung');
                        for(var i = 0, len = vorhandene_uebungen.length; i < len; i++)
                        {
                            if(jQuery(vorhandene_uebungen[i]).find('.uebung-name').data('uebung-id') ==
                                jQuery(this).data('vorschlag-id'))
                            {
                                var a_messages = new Array({
                                    'type': 'fehler',
                                    'message': 'Diese Uebung ist fÃ¼r diesen Trainingsplan bereits gesetzt!'
                                });
                                var obj_cad_message = new CAD.Message();
                                obj_cad_message.init(a_messages);
                                obj_cad_message.open();

                                return false;
                            }
                        }
                        jQuery(self).val('');
                        iCounter = countUebungen();
                        addUebung(jQuery(this).data('vorschlag-id'), iCounter);
                        jQuery('#uebungen-vorschlaege').fadeOut();
                        return false;
                    });
                    jQuery('#uebungen-vorschlaege').fadeIn();
                }
            });
        });

        $('#new-split-plan').unbind('click');
        $('#new-split-plan').bind('click', function() {
            var obj_cad_loader = new CAD.Loader();
            obj_cad_loader.open();
            var sUrl = '/trainingsplan/get-trainingsplan-fuer-split';
            var oParams =
            {
                'user_id': <?php echo $this->trainingsplan_user_fk;?>,
                'trainingsplan_id': <?php echo $this->trainingsplan_id;?>,
                'ajax': 1
            };
            $.post(sUrl, oParams, function(response) {
                obj_cad_loader.close();
                try {
                    var obj_json = JSON.parse(response);

                    if(undefined != obj_json[0].type &&
                        undefined != obj_json[0].message)
                    {
                        var obj_cad_messages = new CAD.Message();
                        obj_cad_messages.init(obj_json);
                        obj_cad_messages.open();
                    }
                } catch (e) {
                    $('#uebungen').append(response);
                    CAD.Sperre().close();
                    trainingsplan_edit_init();
                }
            });
        });
    });

    function trainingsplan_edit_init()
    {
        $(function() {
            $(".droppable").sortable({
                revert: true,
                connectWith: '.droppable',
                items: "li:not(.placeholder)",
                sort: function() {
                    $( this ).removeClass( "ui-state-default" );
                },
                stop: function(event, ui) {
                    connectPracticesToParentTrainPlan(ui.item);
                }
            });
            $(".droppable li").hover(
                function() {
                    $(this).css({'background-color': 'lightblue', 'border': '1px solid skyblue', 'border-radius': '5px', 'cursor': 'pointer'});
                },
                function() {
                    $(this).css({'background-color': 'gainsboro', 'border': '0px none', 'cursor': 'normal'});
                }
            );
        });

        $('.edit').each(function(){
            var iTrainingsplanId = $(this).parent().attr('id');
            $(this).unbind('click');
            $(this).bind('click', function(){
                location.href = '/trainingsplan/edit/id/' + iTrainingsplanId;
            });
        });
    }

    function connectPracticesToParentTrainPlan(oElement)
    {
        var oParent = oElement.parent();
        var iTrainPlanId = oParent.attr('id');
        var aInputsInPractice = oElement.find(':input');
        for (var i = 0; i < aInputsInPractice.length; i++) {
            correctNameOfElement($(aInputsInPractice[i]), iTrainPlanId);
        }
    }

    function correctNameOfElement(oElement, iId)
    {
        var name = oElement.attr('name');
        var iFirstPosStartOfIndex = name.indexOf('[');
        var iFirstPosEndOfIndex = name.indexOf(']');
        if (0 < iFirstPosStartOfIndex
            && 0 < iFirstPosEndOfIndex
            ) {
            iFirstPosStartOfIndex = parseInt(iFirstPosStartOfIndex) + 1;
            var iLengthFirstIndex = iFirstPosEndOfIndex - iFirstPosStartOfIndex;
            var sSubStringWithIndexes = name.substr(iFirstPosStartOfIndex, iLengthFirstIndex);
            name = name.substr(0, iFirstPosStartOfIndex) + iId + name.substr(iFirstPosEndOfIndex, name.length);
            oElement.attr('name', name);
        }
    }

    function correctIdOfElement(oELement, iId)
    {
//        var sId = oElement.attr('id');
////            name = name.replace(/\[([0-9]+?)\]\[[0-9]+?\]/g, iTrainPlanId);
//        var iPosOfFirstIndex = sId.indexOf('_');
//        var iFirstPosEndOfIndex = name.indexOf(']');
//        if (0 < iFirstPosStartOfIndex
//            && 0 < iFirstPosEndOfIndex
//            ) {
//            iFirstPosStartOfIndex = parseInt(iFirstPosStartOfIndex) + 1;
//            var iLengthFirstIndex = iFirstPosEndOfIndex - iFirstPosStartOfIndex;
//            var sSubStringWithIndexes = name.substr(iFirstPosStartOfIndex, iLengthFirstIndex);
//            name = name.substr(0, iFirstPosStartOfIndex) + iId + name.substr(iFirstPosEndOfIndex, name.length);
//            oElement.attr('name', name);
//        }
    }

    function addUebung(iUebungId, iCounter)
    {
        var sUrl = '/trainingsplan/get-uebung';
        var oData = {'id': iUebungId, 'ajax': true, 'counter': iCounter};
        jQuery.post(sUrl, oData, function(response) {
            try {
                var obj_json = JSON.parse(response);

                if(undefined != obj_json[0].type &&
                    undefined != obj_json[0].message)
                {
                    var obj_cad_messages = new CAD.Message();
                    obj_cad_messages.init(obj_json);
                    obj_cad_messages.open();
                }
            } catch (e) {
                jQuery('#uebungen ol:last').append(response);
                connectPracticesToParentTrainPlan(jQuery('#uebungen ol:last .uebung:last-child'));
                trainingsplan_edit_init();
            }
        });
    }

    function countUebungen()
    {
        var iCount = 0;
        jQuery('#trainingsplan_edit .uebung').each(function(){
            if (iCount < $(this).attr('id')) {
               iCount = $(this).attr('id');
            }
        });
        return parseInt(iCount) + 1;
    }
    trainingsplan_edit_init();

</script>

<div id="uebungen-vorschlaege"></div>
<iframe id="upload_target" name="upload_target" style="position: absolute; top: -1000px; left: -1000px; width: 0; height: 0; padding: 0;"></iframe>
